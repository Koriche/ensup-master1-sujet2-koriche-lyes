QUESTIONS:

1/- C'est quoi Git ?
Git est un logiciel de gestion de versions décentralisé en ligne, cela permet d'heberger ses repositories de code.

2/- C'est quoi un repository git ?
Un repository git est un emplacement de fichier où on stock tous les fichiers liée a notre projet. Lors de la validation
de notre code il est instantanément créee dans notre référentiel local.

3/- Quelle commande faut t il écrire pour valider un ajout dans un repertoire git ?
La commande qui permet de validerun ajout dans un repertoir git est: $ git add

4/- que fait la commande git push ?
La commande git push permet de télécharger puis transferer le contenu du referentiel local vers un referentiel à distance.

5/- quel est l'avantage de git par rapport à svn?
L'aventage de git par rapport à un svn est qu'il est capable de suivre un referentiel subversion tout en suivant la structure commune.

6/- c'est quoi la commande git stash ?
La commande git stash permet de remiser notre projet, elle reprends l'état en cours du répertoire de travail et l'enregistre dans la 
pile des modifications non finies réutilisable à tous moment.

7/- c'est quoi la commande git branch ?
Cette commande permet de lister, créer ou supprimer des branches.

8/- c'est quoi la commande git clone ?
Cette comande permet de cloner un dépôt dans un nouveau répertoire.

9/-c'est quoi la commande git config ?
Cette commande permet de récupèrer et de définir un référentiel ou des options globales.

10/- c'est quoi la commande git init ?
Cette commande permet de crée un référentiel git vide ou de réinitialiser un référentiel existant.

11/- c'est quoi un conflit git ?
C'est un événement qui se produit lorsque git est incapable de résoudre automatiquement les différences de code entre deux validations.
Cela provoque donc un conflit entre eux.

12/- comment resoudre un conflit git ?
Pour corriger un conflit git il suffit la ou les lignes de codes qui montre un conflit

13/- c'est quoi la commande git remote ?
La commande git remote permet de gérer un ensemble de référentiels suivis.

14/- quelle est la différence entre git remote et git clone ?
La commande git remote est utilisé pour faire référence à un référentiel distant ou à votre référentiel central, alors que git clone 
est utilisé pour copier ou cloner un référentiel différent.

15/- c'est quoi la commande git status ?
Cette commande permet d'afficher les chemins qui ont des différences entre le fichier d'index et la validation actuelle.

16/- c'est quoi la commande git checkout ?
Cette commande permet de changer de branche ou restaure les fichiers de notre arbre de travail.

17/- c'est quoi la commande git log ?
Cette commande permet d'afficher l'historique des changements d'un repo distant.

18/- donner la suite de commandes à écrire pour envoyer un fichier sur un repository distant
La suite:

git init
git remote add orgin <lien git>
# -- S'il y a un fichier dans le repo distant - #
git pull origin master --allow-unrelated-histories
# --------------------------------------------- #
git add .
git commit -m "<desc du fichier>"
git push orgin master

19/- c'est quoi github ?
GitHub est un service web d'hébergement et de gestion de développement de logiciels, 
utilisant le logiciel de gestion de versions Git.

20/- citer 3 avantages d'utiliser git dans un projet
1er avantage:
Aucune limitations contractuelles sur son utilisation, donc quel que soit le nombre de collaborateurs, de projets ou de mises à jour.
2eme avantage:
Système de gestion de versions déconnecté, il est donc possible de travailler en mode hors connexion avec son dépôt 
tout en gardant des fonctionnalités avancées de collaboration lorsqu’on est connecté.
3eme avantage:
Intègre beaucoup d’outils internes (notamment pour l’utilisation des branches).

Cela pemret de pourvoir travailler en groupe de façon structuré et organiser et en simultanée, et d'éviter 
de perdre des données car celle ci seront conserver.

21/- c'est quoi le fichier .gitignore
Cette commande permet de déclarer le ou les types de fichiers à ignorer.

22/- quelles sont les étapes permettant de lier un projet git local à github?
1er étape:
Créer un repository sur Github
2eme étape:
Récupérer ce lien
3eme étape:
Envoyer un fichier sur un repository distant

23/- quel est le role des branches sur git ?
Le role des branche sur git est de disperser notre travail.

24/- c'est quoi un conflit git?
C'est un événement qui se produit lorsque git est incapable de résoudre automatiquement les différences de code entre deux validations.
Cela provoque donc un conflit entre eux.

25/- comment resoudre un conflit sur git ?
Pour corriger un conflit git il suffit la ou les lignes de codes qui montre un conflit.

LE BONCOIN:

UML
---
 Personne 1-----------* Annonce
 personneId             idAnnonce 
 nom                    intitule
 prenom                 detail
 login                  prix
 motDePasse
 dateNaissance   

 - créer un projet java : Ensup-Master1-tp2-Nom-Prenom
 - configurer le git/github avec un projet java et rajouter serviceshuios en collaborateur
 
 Metier:
--------
 Personne
 Annonce
 
 Iservice:
----------
  //Crud Personne
 public int creerPersonne(List<Personne> list, Personne personne)
 public Personne getPersonne(List<Personne> list,int idPersonne)
 public void deletePersonne(List<Personne> list,int idPersonne)
 public void updatePersonne(List<Personne> list,Personne p, String nom, String prenom, Date dateNaissance)
 public List<Personne> findAllPersonnes()
 public int getPersonneId(List<Personne> list,Personne p)
 public void affichePersonnes();
 public void afficheAnnoncesPersonne(Personne p)
 //Crud Annonce
 public int creerAnnonce(Personne personne, Annonce a)
 public Annonce getAnnonce(Personne personne,int idAnnonce)
 public void deleteAnnonce(Personne personne,int idAnnonce)
 public void updateAnnonce(Personne personne,Annonce a)
 public List<Annonce> findAllAnnonce(Personne personne)

ServiceImpl
-----------
implementation de l'interface
utiliser un tableau de Personne pour office de stockage des données
public static List<Personne> base = new ArrayList<Personne>();

Lanceur
-------
Tester chaque méthode

A la fin (17h00) au plus tard pusher son code sur github  